{
    "contents" : "source( \"helpers.R\" )\n## --- IMPORT DATA --- \n  ## Step 1: copy data to excel spreadsheet\n  \n  ## Step 2: remove all formatting via clear>all formatting.\n  ##  make sure that date-time fields are in excel number format i.e. 40802.09\n  ##  make sure that all \"\" values are replaced with null in excel\n  ##   copy data set into new sheet--values only > click find > search for \"\" text > replace with \"null\" (check match entire contents) > replace \"null\" with blank\n  \nraw <- import_raw( \"Data.csv\" )\n\n## --- COPY DATA SET ---\n\ncopy <- as.data.table( raw )\n\n## --- REMOVE UNDESIRED VARIABLES ---\n\n## --- TRANSFORM / RESHAPE DATA ---\n\n  ## 0) convert timestamps to excel friendly format\n  copy[ , c( \"timestamp_Bedded\" ) := list( as.excel_DT( timestamp_Bedded ) ) ]\n  \n  ## 1) Categorize orders into standard ancillary tyeps\n    \n    ## Categorize:  CT | CTA\n    copy[, c( \"STD_ANC\" ) := \n           list( ifelse( grepl( \"(?:^|\\\\s)+(?:CT|CTA)(?:\\\\s|$)+\", x = Order_Name ), \n                     \"CT\",\n                     \"NA\" ) ) ]\n    # table( copy[ STD_ANC == \"CT\" ]$Order_Name ) ## check regex selected right terms\n    \n    \n    ## Categorize:  MR\n    copy[ STD_ANC == \"NA\", \n          c( \"STD_ANC\" ) := \n            list( ifelse( grepl( \"(?:^|\\\\s)+(?:MR)(?:\\\\s|$)+\", x = Order_Name ), \n                          \"MR\",\n                          \"NA\" ) ) ]\n    # table( copy[ STD_ANC == \"MR\" ]$Order_Name ) ## check regex selected right terms\n    \n    \n    ## Categorize:  EKG | Holter\n    copy[ STD_ANC == \"NA\", \n          c( \"STD_ANC\" ) := \n            list( ifelse( grepl( \"(?:^|\\\\s)+(?:EKG|[hH]olter)(?:\\\\s|$)+\", x = Order_Name ), \n                          \"EKG\",\n                          \"NA\" ) ) ]\n    # table( copy[ STD_ANC == \"EKG\" ]$Order_Name ) ## check regex selected right terms\n    \n    \n    ## Categorize:  XR | Fluoro\n    copy[ STD_ANC == \"NA\", \n          c( \"STD_ANC\" ) := \n            list( ifelse( grepl( \"(?:^|\\\\s)+(?:XR|[fF]luoro)(?:\\\\s|$)+\", x = Order_Name ), \n                          \"XR\",\n                          \"NA\" ) ) ]\n    # table( copy[ STD_ANC == \"XR\" ]$Order_Name ) ## check regex selected right terms\n    \n    \n    ## Categorize:  Echo\n    copy[ STD_ANC == \"NA\", \n          c( \"STD_ANC\" ) := \n            list( ifelse( grepl( \"(?:^|\\\\s)+(?:[eE][cC][hH][oO])(?:\\\\s|$)+\", x = Order_Name ), \n                          \"Echo\",\n                          \"NA\" ) ) ]\n    # table( copy[ STD_ANC == \"Echo\" ]$Order_Name ) ## check regex selected right terms\n    \n    \n    ## Categorize:  Ultrasound | US\n    copy[ STD_ANC == \"NA\", \n          c( \"STD_ANC\" ) := \n            list( ifelse( grepl( \"(?:^|\\\\s)+(?:[uU]ltrasound|US)(?:\\\\s|$)+\", x = Order_Name ), \n                          \"US\",\n                          \"NA\" ) ) ]\n    # table( copy[ STD_ANC == \"US\" ]$Order_Name ) ## check regex selected right terms\n    \n    \n    ## Categorize:  NucMed | NM\n    copy[ STD_ANC == \"NA\", \n          c( \"STD_ANC\" ) := \n            list( ifelse( grepl( \"(?:^|\\\\s)+(?:NM)(?:\\\\s|$)+\", x = Order_Name ), \n                          \"NM\",\n                          \"NA\" ) ) ]\n    # table( copy[ STD_ANC == \"NM\" ]$Order_Name ) ## check regex selected right terms\n    \n    \n    ## Categorize:  Cath\n    copy[ STD_ANC == \"NA\", \n          c( \"STD_ANC\" ) := \n            list( ifelse( grepl( \"(?:^|\\\\s)+(?:CCL)(?:\\\\s|$)+\", x = Order_Name ), \n                          \"Cath\",\n                          \"NA\" ) ) ]\n    # table( copy[ STD_ANC == \"Cath\" ]$Order_Name ) ## check regex selected right terms\n\n    \n    ## get rid of Order_Name column to aggregate on Standard categories during cast\n    copy[, c( \"Order_Name\", \"BASE_ORDER_TYPE\", \n              \"Physician.ID\", \"DIAGNOSIS_FROM_VISIT\" ) := list( NULL ) ]\n    \n    \n  ## 2) cast std orders\n  wide <- dcast( copy, ... ~ STD_ANC, fun.aggregate = length )\n\n  \n  ## 3) export data to csv\n    fileName = \"wide\"\n    fileExt = \".csv\"\n    write.table( wide, \n                 file      = paste( \"./\", fileName, fileExt ), \n                 sep       = \",\",\n                 row.names = TRUE, \n                 col.names = NA )\n  \n  \n  \n## --- ADD ADDITIONAL FIELDS ---\n  \n  copy <- copy( wide )\n  \n  ## Calculate inter-arrival durations\n  copy[, c( \"Arr-to-Rm\",\n            \"Rm-to-MD\",\n            \"MD-to-Dispo\",\n            \"Dispo-to-DC\",\n            \"Bed-to-DC\",\n            \"Arr_to_DC\" ) := \n         list( ( timestamp_Bedded - timestamp_arrival ) * 24 * 60,\n               ( timestamp_dr - timestamp_Bedded ) * 24 * 60,\n               ( timestamp_disposition - timestamp_dr ) * 24 * 60,\n               ( timestamp_ed_departure - timestamp_disposition ) * 24 * 60,\n               ( timestamp_ed_departure - timestamp_Bedded ) * 24 * 60,\n               ( timestamp_ed_departure - timestamp_arrival ) * 24 * 60 ) ]\n\n  \n  ## add Hour fields\n  copy[, c( \"Arr_Hr\",\n            \"Rm_Hr\",\n            \"MD_Hr\",\n            \"Dispo_Hr\",\n            \"Bed_Hr\",\n            \"DoS\",\n            \"ESI_Group\" ) := \n         list( to.excel_Hr( timestamp_arrival ),\n               to.excel_Hr( timestamp_Bedded ),\n               to.excel_Hr( timestamp_dr ),\n               to.excel_Hr( timestamp_disposition  ),\n               to.excel_Hr( timestamp_ed_departure ),\n               as.integer( round( timestamp_arrival ) ), \n               ifelse( as.integer( TRIAGE_CATEGORY ) <= 2,\n                       \"ESI 1-2\",\n                       ifelse( as.integer( TRIAGE_CATEGORY ) > 3,\n                               \"ESI 4-5\",\n                               \"ESI 3\" ) ) ) ]\n\n    \n## --- FILTER SUBSET FOR TOP 50TH PERCENTILE ---\n  top_50_perc <- unique( copy[, .N, by = DoS ][ N >= 97 , DoS ] )\n  \n  copy <- copy[ DoS %in% top_50_perc ]\n\n## --- GENERATE GRAPHS ---\n  DT <- copy( copy )\n  \n  ## 1) Box Plots\n  # helper to process each month's data given a filter and variable description\n  sep_dec_mar <- function( DT, filter, y_field, by_categories, var_descr ) {\n    type <- \"Box+Wh\"\n    by_cat <- by_categories\n    x_field <- quote( `Arr_Hr` )\n    \n#   # UNCOMMENT THIS SECTION TO GET OTHER MONTHS\n#     # SEPTEMBER\n#     DT[ eval( filter ) &\n#          DoS >= as.excel_DT(\"09/01/2015 12:00:00 AM\") &\n#          DoS <= as.excel_DT(\"11/30/2015 11:59:59 PM\")] %>%\n#       my_boxplot( x_field, y_field, by_cat ) %>%\n#       my_ggsave(type = type,\n#                 var_descr = var_descr,\n#                 clarifier = \"(15-09)\", 11, 8.5)\n#     \n#     # DECEMBER\n#     DT[ eval( filter ) &\n#          DoS >= as.excel_DT(\"12/01/2015 12:00:00 AM\") &\n#          DoS <= as.excel_DT(\"02/29/2016 11:59:59 PM\")] %>%\n#       my_boxplot( x_field, y_field, by_cat ) %>%\n#       my_ggsave(type = type,\n#                 var_descr = var_descr,\n#                 clarifier = \"(15-12)\", 11, 8.5)\n#     \n#     # MARCH\n#     DT[ eval( filter ) &\n#          DoS >= as.excel_DT( \"03/01/2016 12:00:00 AM\" ) &\n#          DoS <= as.excel_DT( \"10/31/2016 11:59:59 PM\" )] %>%\n#       my_boxplot( x_field, y_field, by_cat ) %>%\n#       my_ggsave(type = type,\n#                 var_descr = var_descr,\n#                 clarifier = \"(16_03)\", 11, 8.5)\n    \n    # NOVEMBER\n    DT[ eval( filter ) &\n          DoS >= as.excel_DT( \"11/01/2016 12:00:00 AM\" ) &\n          DoS <= as.excel_DT( \"11/30/2016 11:59:59 PM\" )] %>%\n      my_boxplot( x_field, y_field, by_cat ) %>%\n      my_ggsave(type = type,\n                var_descr = var_descr,\n                clarifier = \"(16_11)\", 11, 8.5)\n  }\n  \n\n  ## -- FILTERS AND GRAPHS --\n  \n  # Filter to be used by all other filters\n  common_filter <- bquote(TRIAGE_CATEGORY != \"(Unassigned)\" &\n                            Arr_Hr >= 10 & Arr_Hr <= 22)\n  \n  arr_Rm_filter <-\n    bquote(.(common_filter) &\n             `Arr-to-Rm` > 0  & `Arr-to-Rm` < 90)\n  rm_MD_filter <-\n    bquote(.(common_filter) &\n             `Rm-to-MD` > 0  & `Rm-to-MD` < 120 )\n  md_Dispo_filter <-\n    bquote(.(common_filter) &\n             `MD-to-Dispo` > 0  & `MD-to-Dispo` < 400 )\n  dispo_DC_filter <-\n    bquote(.(common_filter) &\n             `Dispo-to-DC` > 0  & `Dispo-to-DC` < 500 )\n  bed_DC_filter <-\n    bquote(.(common_filter) &\n             `Bed-to-DC` > 0  & `Bed-to-DC` < 600 )\n  arr_DC_filter <-\n    bquote(.(common_filter) &\n             `Arr_to_DC` > 0 & `Arr_to_DC` <600 )\n  \n  ## generate and save graphs for each variable of interest\n  sep_dec_mar(DT, arr_Rm_filter, quote(`Arr-to-Rm`), c( \"ESI_Group\" ), \"Arrival to Room by Hr\")\n  sep_dec_mar(DT, rm_MD_filter, quote(`Rm-to-MD`), c( \"ESI_Group\" ), \"Room to MD by Hr\")\n  sep_dec_mar(DT, md_Dispo_filter, quote(`MD-to-Dispo`),  c( \"ESI_Group\" ), \"MD to Disposition by Hr\")\n  sep_dec_mar(DT, dispo_DC_filter, quote(`Dispo-to-DC`),  c( \"ESI_Group\" ), \"Disposition to Discharge by Hr\")\n  sep_dec_mar(DT, bed_DC_filter, quote(`Bed-to-DC`),  c( \"ESI_Group\" ), \"Room to Discharge by Hr\")\n  sep_dec_mar(DT, arr_DC_filter, quote(`Arr_to_DC`),  c( \"ESI_Group\" ), \"Arrival to Discharge by Hr\")\n  \n  \n  \n  ## GRAPHS FOR ESI 3s by admit discharge\n  DT <- copy( copy )\n  \n  ## Categorize:  Discharged\n  DT[, c(\"STD_DISPO\") :=\n       list(ifelse(\n         grepl(\"(?:^|\\\\s)+(?:Discharged|Transfer|Transferred)(?:\\\\s|$)+\",\n           x = DISPOSITION),\n         \"Discharged\",\n         \"NA\"\n       ))]\n  \n  ## Categorize:  Admitted\n  DT[STD_DISPO == \"NA\", c(\"STD_DISPO\") :=\n       list(ifelse(\n         grepl(\"(?:^|\\\\s)+(?:Admitted|Admit)(?:\\\\s|$)+\",\n               x = DISPOSITION),\n         \"Admitted\",\n         \"NA\"\n       ))]\n  \n  DT <- DT[ ESI_Group == \"ESI 3\" & STD_DISPO != \"NA\" ]\n  \n  ## generate and save graphs for each variable of interest\n  sep_dec_mar(DT, arr_Rm_filter, quote(`Arr-to-Rm`), c( \"ESI_Group\", \"STD_DISPO\" ), \"Arrival to Room by Hr\")\n  sep_dec_mar(DT, rm_MD_filter, quote(`Rm-to-MD`), c( \"ESI_Group\", \"STD_DISPO\" ), \"Room to MD by Hr\")\n  sep_dec_mar(DT, md_Dispo_filter, quote(`MD-to-Dispo`),  c( \"ESI_Group\", \"STD_DISPO\" ), \"MD to Disposition by Hr\")\n  sep_dec_mar(DT, dispo_DC_filter, quote(`Dispo-to-DC`),  c( \"ESI_Group\", \"STD_DISPO\" ), \"Disposition to Discharge by Hr\")\n  sep_dec_mar(DT, bed_DC_filter, quote(`Bed-to-DC`),  c( \"ESI_Group\", \"STD_DISPO\" ), \"Room to Discharge by Hr\")\n  sep_dec_mar(DT, arr_DC_filter, quote(`Arr_to_DC`),  c( \"ESI_Group\", \"STD_DISPO\" ), \"Arrival to Discharge by Hr\")\n\n  \n  \n  ## export descriptive statistics tables\n  DT <- copy( DT ) ## USE COPY FROM PREVIOUS POINT with all data AND STD_DISPO field\n  \n  # SEPTEMBER\n  my_stats( \n    DT[ eval( bed_DC_filter ) &\n        DoS >= as.excel_DT(\"09/01/2015 12:00:00 AM\") &\n        DoS <= as.excel_DT(\"11/30/2015 11:59:59 PM\")], \n    quote( `Bed-to-DC` ),\n    c( \"TRIAGE_CATEGORY\", \"STD_DISPO\" ) ) %>% my_export( \"Bed-to-DC_sep\" )\n  \n  # DECEMBER\n  my_stats( \n    DT[ eval( bed_DC_filter ) &\n        DoS >= as.excel_DT(\"12/01/2015 12:00:00 AM\") &\n        DoS <= as.excel_DT(\"02/29/2016 11:59:59 PM\")],\n    quote( `Bed-to-DC` ),\n    c( \"TRIAGE_CATEGORY\", \"STD_DISPO\" ) ) %>% my_export( \"Bed-to-DC_dec\" )\n  \n  # MARCH\n  my_stats( \n    DT[ eval( bed_DC_filter ) &\n          DoS >= as.excel_DT( \"03/01/2016 12:00:00 AM\" ) &\n          DoS <= as.excel_DT( \"10/31/2016 11:59:59 PM\" )],\n      quote( `Bed-to-DC` ),\n    c( \"TRIAGE_CATEGORY\", \"STD_DISPO\" ) ) %>% my_export( \"Bed-to-DC_mar\" )\n  \n  # NOVEMBER\n  my_stats( \n    DT[ eval( bed_DC_filter ) &\n          DoS >= as.excel_DT( \"11/01/2016 12:00:00 AM\" ) &\n          DoS <= as.excel_DT( \"11/30/2016 11:59:59 PM\" )],\n    quote( `Bed-to-DC` ),\n    c( \"TRIAGE_CATEGORY\", \"STD_DISPO\" ) ) %>% my_export( \"Bed-to-DC_nov\" )\n\n#### --- HISTOGRAMS --- \n  my_histo( DT, quote( `Bed-to-DC` ), 0, 700, c( \"TRIAGE_CATEGORY\" ) )\n  my_histo( DT, quote( `Arr-to-Rm` ), 0, 700, c( \"TRIAGE_CATEGORY\" ) )\n  my_histo( DT, quote( `Rm-to-MD` ), 0, 700, c( \"TRIAGE_CATEGORY\" ) )\n  my_histo( DT, quote( `MD-to-Dispo` ), 0, 700, c( \"TRIAGE_CATEGORY\" ) )\n  my_histo( DT, quote( `Dispo-to-DC` ), 0, 700, c( \"TRIAGE_CATEGORY\" ) )\n",
    "created" : 1484677354365.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1245359208",
    "id" : "57600590",
    "lastKnownWriteTime" : 1481566074,
    "path" : "C:/Users/glseanb/Google Drive/R/Workspace/2016-10 Georgia - ED (update)/analysis.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}